/* eslint-disable */
export default async () => {
    const t = {
        ["./dto/error.dto"]: await import("./dto/error.dto"),
        ["./dto/offset-pagination/metadata.dto"]: await import("./dto/offset-pagination/metadata.dto"),
        ["./modules/set/entities/set.entity"]: await import("./modules/set/entities/set.entity"),
        ["./modules/set/set.enum"]: await import("./modules/set/set.enum"),
        ["./modules/set/entities/card.entity"]: await import("./modules/set/entities/card.entity"),
        ["./modules/folder/folder.entity"]: await import("./modules/folder/folder.entity"),
        ["./modules/user/entities/user.entity"]: await import("./modules/user/entities/user.entity"),
        ["./constants/index"]: await import("./constants/index"),
        ["./modules/user/entities/session.entity"]: await import("./modules/user/entities/session.entity"),
        ["./modules/set/dto/card.dto"]: await import("./modules/set/dto/card.dto"),
        ["./modules/set/dto/set.dto"]: await import("./modules/set/dto/set.dto"),
        ["./modules/auth/auth.dto"]: await import("./modules/auth/auth.dto"),
        ["./modules/user/user.dto"]: await import("./modules/user/user.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./dto/error.dto"), { "ErrorDto": { timestamp: { required: true, type: () => String }, statusCode: { required: true, type: () => Number }, message: { required: true, type: () => String }, details: { required: false, type: () => [t["./dto/error.dto"].ErrorDetailDto] } }, "ErrorDetailDto": { property: { required: true, type: () => String }, code: { required: true, type: () => String }, message: { required: true, type: () => String } } }], [import("./database/entities/abstract.entity"), { "AbstractEntity": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, createdBy: { required: true, type: () => Object }, updatedBy: { required: true, type: () => Object } }, "DeletableAbstractEntity": {} }], [import("./dto/offset-pagination/metadata.dto"), { "OffsetMetadataDto": { take: { required: true, type: () => Number }, totalRecords: { required: true, type: () => Number }, totalPages: { required: true, type: () => Number }, currentPage: { required: true, type: () => Number }, nextPage: { required: false, type: () => Number }, previousPage: { required: false, type: () => Number } } }], [import("./dto/offset-pagination/paginated.dto"), { "OffsetPaginatedDto": { data: { required: true }, metadata: { required: true, type: () => t["./dto/offset-pagination/metadata.dto"].OffsetMetadataDto } } }], [import("./modules/auth/auth.dto"), { "LoginDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } }, "RegisterDto": { username: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, confirmPassword: { required: true, type: () => String } }, "ChangePasswordDto": { oldPassword: { required: true, type: () => String }, newPassword: { required: true, type: () => String }, confirmPassword: { required: true, type: () => String } }, "LoginResDto": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } }, "RefreshResDto": { accessToken: { required: true, type: () => String } } }], [import("./modules/folder/folder.entity"), { "FolderEntity": { id: { required: true, type: () => Object }, name: { required: true, type: () => String }, description: { required: false, type: () => String }, sets: { required: true, type: () => [t["./modules/set/entities/set.entity"].SetEntity] } } }], [import("./modules/set/entities/card.entity"), { "CardEntity": { id: { required: true, type: () => Object }, term: { required: true, type: () => String }, definition: { required: true, type: () => String }, correctCount: { required: false, type: () => Number }, set: { required: true, type: () => t["./modules/set/entities/set.entity"].SetEntity } } }], [import("./modules/set/entities/set.entity"), { "SetEntity": { id: { required: true, type: () => Object }, name: { required: true, type: () => String }, description: { required: false, type: () => String }, visibleTo: { required: true, enum: t["./modules/set/set.enum"].VisibleTo }, passcode: { required: false, type: () => String }, cards: { required: true, type: () => [t["./modules/set/entities/card.entity"].CardEntity] }, folder: { required: true, type: () => t["./modules/folder/folder.entity"].FolderEntity }, user: { required: true, type: () => t["./modules/user/entities/user.entity"].UserEntity }, author: { required: true, type: () => t["./modules/user/entities/user.entity"].UserEntity } } }], [import("./modules/user/entities/user.entity"), { "UserEntity": { id: { required: true, type: () => Object }, role: { required: true, enum: t["./constants/index"].Role }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, isEmailVerified: { required: true, type: () => Boolean }, bio: { required: false, type: () => String }, avatar: { required: false, type: () => String }, sessions: { required: true, type: () => [t["./modules/user/entities/session.entity"].SessionEntity] }, sets: { required: true, type: () => [t["./modules/set/entities/set.entity"].SetEntity] } } }], [import("./modules/user/entities/session.entity"), { "SessionEntity": { id: { required: true, type: () => Object }, expiresAt: { required: true, type: () => Date }, user: { required: true, type: () => t["./modules/user/entities/user.entity"].UserEntity } } }], [import("./dto/offset-pagination/query.dto"), { "OffsetPaginationQueryDto": { page: { required: false, type: () => Number }, take: { required: false, type: () => Number }, order: { required: false, enum: t["./constants/index"].Order }, search: { required: false, type: () => String } } }], [import("./modules/folder/folder.dto"), { "CreateFolderDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String } }, "UpdateFolderDto": {}, "AddSetsDto": { setIds: { required: true, type: () => [String] } }, "RemoveSetsDto": {} }], [import("./modules/set/dto/card.dto"), { "CardDto": { id: { required: false, type: () => Object, nullable: true }, term: { required: true, type: () => String }, definition: { required: true, type: () => String } } }], [import("./modules/set/dto/set.dto"), { "CreateSetDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, visibleTo: { required: true, enum: t["./modules/set/set.enum"].VisibleTo }, passcode: { required: false, type: () => String }, cards: { required: true, type: () => [t["./modules/set/dto/card.dto"].CardDto] } }, "UpdateSetDto": {}, "StartLearningDto": { passcode: { required: true, type: () => String } }, "SaveAnswerDto": { isCorrect: { required: true, type: () => Boolean } }, "SetMetadataDto": { totalCards: { required: true, type: () => Number }, notStudiedCount: { required: true, type: () => Number }, learningCount: { required: true, type: () => Number }, knownCount: { required: true, type: () => Number } }, "SetDetailDto": { set: { required: true, type: () => t["./modules/set/entities/set.entity"].SetEntity }, metadata: { required: true, type: () => t["./modules/set/dto/set.dto"].SetMetadataDto } } }], [import("./modules/user/user.dto"), { "UpdateUserDto": { username: { required: true, type: () => String }, email: { required: true, type: () => String }, bio: { required: false, type: () => String } }, "UploadAvatarResponseDto": { avatarUrl: { required: true, type: () => String } } }]], "controllers": [[import("./modules/auth/auth.controller"), { "AuthController": { "googleRedirect": {}, "googleLogin": {}, "register": {}, "login": { type: t["./modules/auth/auth.dto"].LoginResDto }, "logout": {}, "refreshToken": { type: t["./modules/auth/auth.dto"].RefreshResDto }, "changePassword": {}, "forgotPassword": { type: String }, "verifyForgotPassword": { type: String }, "verifyEmail": { type: String }, "resendVerifyEmail": { type: String } } }], [import("./modules/folder/folder.controller"), { "FolderController": { "create": { type: t["./modules/folder/folder.entity"].FolderEntity }, "findAll": {}, "findOne": { type: t["./modules/folder/folder.entity"].FolderEntity }, "update": { type: t["./modules/folder/folder.entity"].FolderEntity }, "remove": { type: t["./modules/folder/folder.entity"].FolderEntity }, "addSets": { type: t["./modules/folder/folder.entity"].FolderEntity }, "removeSets": { type: t["./modules/folder/folder.entity"].FolderEntity } } }], [import("./modules/set/set.controller"), { "SetController": { "findManyPublic": {}, "findOnePublic": { type: t["./modules/set/entities/set.entity"].SetEntity }, "findMany": {}, "findOne": { type: t["./modules/set/entities/set.entity"].SetEntity }, "findOneAndMetadata": { type: t["./modules/set/dto/set.dto"].SetDetailDto }, "saveAnswer": {}, "resetFlashcard": {}, "startLearning": { type: t["./modules/set/entities/set.entity"].SetEntity }, "create": { type: t["./modules/set/entities/set.entity"].SetEntity }, "update": { type: t["./modules/set/entities/set.entity"].SetEntity }, "remove": { type: t["./modules/set/entities/set.entity"].SetEntity } } }], [import("./modules/user/user.controller"), { "UserController": { "getOne": { type: t["./modules/user/entities/user.entity"].UserEntity }, "getAll": { type: [t["./modules/user/entities/user.entity"].UserEntity] }, "updateProfile": { type: t["./modules/user/entities/user.entity"].UserEntity }, "uploadAvatar": { type: t["./modules/user/user.dto"].UploadAvatarResponseDto }, "deleteAvatar": {} } }]] } };
};